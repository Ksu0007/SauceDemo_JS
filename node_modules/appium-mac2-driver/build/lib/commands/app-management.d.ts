/**
 * Start an app with given bundle identifier or activates it
 * if the app is already running. An exception is thrown if the
 * app with the given identifier cannot be found.
 *
 * @this {Mac2Driver}
 * @param {import('../types').LaunchAppOptions} [opts={}]
 */
export function macosLaunchApp(this: import("../driver").Mac2Driver, opts?: import("../types").LaunchAppOptions | undefined): Promise<unknown>;
/**
 * Activate an app with given bundle identifier. An exception is thrown if the
 * app cannot be found or is not running.
 *
 * @this {Mac2Driver}
 * @param {import('../types').ActivateAppOptions} [opts={}]
 */
export function macosActivateApp(this: import("../driver").Mac2Driver, opts?: import("../types").ActivateAppOptions | undefined): Promise<unknown>;
/**
 * Terminate an app with given bundle identifier. An exception is thrown if the
 * app cannot be found.
 *
 * @this {Mac2Driver}
 * @param {import('../types').TerminateAppOptions} opts
 * @returns {Promise<boolean>} `true` if the app was running and has been successfully terminated.
 * `false` if the app was not running before.
 */
export function macosTerminateApp(this: import("../driver").Mac2Driver, opts: import('../types').TerminateAppOptions): Promise<boolean>;
/**
 * Query an app state with given bundle identifier. An exception is thrown if the
 * app cannot be found.
 *
 * @this {Mac2Driver}
 * @param {import('../types').QueryAppStateOptions} opts
 * @returns {Promise<number>} The application state code. See
 * https://developer.apple.com/documentation/xctest/xcuiapplicationstate?language=objc
 * for more details
 */
export function macosQueryAppState(this: import("../driver").Mac2Driver, opts: import('../types').QueryAppStateOptions): Promise<number>;
export type Mac2Driver = import('../driver').Mac2Driver;
//# sourceMappingURL=app-management.d.ts.map