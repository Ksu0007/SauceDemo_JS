/**
 * Set value to the given element
 *
 * @this {Mac2Driver}
 * @param {import('../types').SetValueOptions} opts
 */
export function macosSetValue(this: import("../driver").Mac2Driver, opts: import('../types').SetValueOptions): Promise<unknown>;
/**
 * Perform click gesture on an element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').ClickOptions} opts
 */
export function macosClick(this: import("../driver").Mac2Driver, opts?: import('../types').ClickOptions): Promise<unknown>;
/**
 * Perform scroll gesture on an element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').ScrollOptions} opts
 */
export function macosScroll(this: import("../driver").Mac2Driver, opts?: import('../types').ScrollOptions): Promise<unknown>;
/**
 * Perform swipe gesture on an element
 *
 * @this {Mac2Driver}
 * @param {import('../types').SwipeOptions} opts
 */
export function macosSwipe(this: import("../driver").Mac2Driver, opts: import('../types').SwipeOptions): Promise<unknown>;
/**
 * Perform right click gesture on an element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').RightClickOptions} opts
 */
export function macosRightClick(this: import("../driver").Mac2Driver, opts?: import('../types').RightClickOptions): Promise<unknown>;
/**
 * Perform hover gesture on an element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').HoverOptions} opts
 */
export function macosHover(this: import("../driver").Mac2Driver, opts?: import('../types').HoverOptions): Promise<unknown>;
/**
 * Perform double click gesture on an element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').DoubleClickOptions} opts
 */
export function macosDoubleClick(this: import("../driver").Mac2Driver, opts?: import('../types').DoubleClickOptions): Promise<unknown>;
/**
 * Perform long click and drag gesture on an element or by absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').ClickAndDragOptions} opts
 */
export function macosClickAndDrag(this: import("../driver").Mac2Driver, opts: import('../types').ClickAndDragOptions): Promise<unknown>;
/**
 * Perform long click, drag and hold gesture on an element or by absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').ClickAndDragAndHoldOptions} opts
 */
export function macosClickAndDragAndHold(this: import("../driver").Mac2Driver, opts: import('../types').ClickAndDragAndHoldOptions): Promise<unknown>;
/**
 * Send keys to the given element or to the application under test
 *
 * @this {Mac2Driver}
 * @param {import('../types').KeysOptions} opts
 */
export function macosKeys(this: import("../driver").Mac2Driver, opts: import('../types').KeysOptions): Promise<unknown>;
/**
 * Perform press gesture on a Touch Bar element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').PressOptions} opts
 */
export function macosPressAndHold(this: import("../driver").Mac2Driver, opts: import('../types').PressOptions): Promise<unknown>;
/**
 * Perform tap gesture on a Touch Bar element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').TapOptions} opts
 */
export function macosTap(this: import("../driver").Mac2Driver, opts?: import('../types').TapOptions): Promise<unknown>;
/**
 * Perform tap gesture on a Touch Bar element or by relative/absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').DoubleTapOptions} opts
 */
export function macosDoubleTap(this: import("../driver").Mac2Driver, opts?: import('../types').DoubleTapOptions): Promise<unknown>;
/**
 * Perform long press and drag gesture on a Touch Bar element or by absolute coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').PressAndDragOptions} opts
 */
export function macosPressAndDrag(this: import("../driver").Mac2Driver, opts: import('../types').PressAndDragOptions): Promise<unknown>;
/**
 * Perform press, drag and hold gesture on a Touch Bar element or by absolute Touch Bar coordinates
 *
 * @this {Mac2Driver}
 * @param {import('../types').PressAndDragAndHoldOptions} opts
 */
export function macosPressAndDragAndHold(this: import("../driver").Mac2Driver, opts: import('../types').PressAndDragAndHoldOptions): Promise<unknown>;
export type Mac2Driver = import('../driver').Mac2Driver;
//# sourceMappingURL=gestures.d.ts.map